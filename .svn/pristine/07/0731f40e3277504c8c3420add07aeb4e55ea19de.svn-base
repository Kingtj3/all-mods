using ProtoBuf;
using VRage.ModAPI;
using VRage.Utils;
using Vsi.Network;

namespace Vsi.AutoMiner
{

    [ProtoContract]
    public class PropertiesChangedMessage : EntityMessage<PropertiesChangedMessage>
    {
        public static readonly int ID = (int)MyStringHash.GetOrCompute("VSI.AutominerPropertiesChanged");

        [ProtoMember(1)]
        public override long EntityId { get; protected set; }

        [ProtoMember(2)]
        public int Radius;

        [ProtoMember(3)]
        public int Depth;

        [ProtoMember(4)]
        public bool ShowArea;

        [ProtoMember(5)]
        public long TargetInventoryEntity;

        public PropertiesChangedMessage(AutoMinerGameLogic logic)
            : base(logic.Entity.EntityId)
        {
            Radius = logic.MiningRadius;
            Depth = logic.MiningDepth;
            ShowArea = logic.ShowMiningArea;
            TargetInventoryEntity = logic.TargetInventoryEntity?.EntityId ?? 0L;
        }

        // public PropertiesChangedMessage(long entityId, int radius, int depth, bool showArea, IMyEntity targetInventoryEntity)
        //     : base(entityId)
        // {
        //     Radius = radius;
        //     Depth = depth;
        //     ShowArea = showArea;
        //     TargetInventoryEntity = targetInventoryEntity?.EntityId ?? 0L;
        // }

        public override int GetMessageId()
        {
            return ID;
        }

        private PropertiesChangedMessage()
        {}
    }

}